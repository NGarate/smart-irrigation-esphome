esphome:
  name: esp32-s3-4plants
  friendly_name: "4 Plants Irrigation Controller"
  includes: []
packages:
  plant1: !include
    file: packages/plant.yaml
    vars:
      plant: "1"
      mux: "A0_GND"
      relay_gpio: "GPIO11"
      idx: "0"
  plant2: !include
    file: packages/plant.yaml
    vars:
      plant: "2"
      mux: "A1_GND"
      relay_gpio: "GPIO12"
      idx: "1"
  plant3: !include
    file: packages/plant.yaml
    vars:
      plant: "3"
      mux: "A2_GND"
      relay_gpio: "GPIO13"
      idx: "2"
  plant4: !include
    file: packages/plant.yaml
    vars:
      plant: "4"
      mux: "A3_GND"
      relay_gpio: "GPIO14"
      idx: "3"

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_ESPTOOLPY_FLASHSIZE_16MB: y
      CONFIG_ESP32S3_SPIRAM_SUPPORT: y
      CONFIG_SPIRAM_TYPE_AUTO: y
      CONFIG_SPIRAM_MODE_OCT: y
      CONFIG_SPIRAM_SPEED_80M: y

logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret encryption_key

# Enable WiFi for Home Assistant integration
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pswd
  
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "ESP32-S3-4Plants"
    password: !secret ap_pswd

captive_portal:

# OTA for updates via WiFi
ota:
  - platform: esphome
    password: !secret ota_pswd

time:
  - platform: sntp
    id: sntp_time

# I2C Bus for ADS1115 ADC module
i2c:
  sda: GPIO8
  scl: GPIO9
  scan: true
  id: bus_a

# ADS1115 ADC module for soil moisture sensors
ads1115:
  - address: 0x48
    i2c_id: bus_a
    id: ads1115_hub

# Calibration values for soil moisture sensors
globals:
  # Global irrigation concurrency and timing
  - id: irrigation_active
    type: bool
    restore_value: yes
    initial_value: 'false'
  - id: active_plant_id
    type: int
    restore_value: yes
    initial_value: '0'
  - id: idle_tick_seconds
    type: int
    restore_value: no
    initial_value: '0'
  - id: session_start_ts
    type: uint32_t
    restore_value: no
    initial_value: '0'

  # Per-plant arrays (index 0..3 -> plants 1..4)
  - id: lockout_until
    type: std::array<uint32_t, 4>
    restore_value: yes
    initial_value: '{0,0,0,0}'
  - id: last_moisture_pct
    type: std::array<float, 4>
    restore_value: no
    initial_value: '{0,0,0,0}'
  - id: prev_moisture_pct
    type: std::array<float, 4>
    restore_value: no
    initial_value: '{0,0,0,0}'
  - id: last_moisture_ts
    type: std::array<uint32_t, 4>
    restore_value: no
    initial_value: '{0,0,0,0}'
  - id: prev_moisture_ts
    type: std::array<uint32_t, 4>
    restore_value: no
    initial_value: '{0,0,0,0}'
  - id: last_session_cycles
    type: std::array<int, 4>
    restore_value: no
    initial_value: '{0,0,0,0}'
  - id: last_session_duration_s
    type: std::array<int, 4>
    restore_value: no
    initial_value: '{0,0,0,0}'
  - id: cycle_count
    type: std::array<int, 4>
    restore_value: no
    initial_value: '{0,0,0,0}'
  - id: calibration_dry
    type: std::array<float, 4>
    restore_value: yes
    initial_value: '{3.3,3.3,3.3,3.3}'
  - id: calibration_wet
    type: std::array<float, 4>
    restore_value: yes
    initial_value: '{1.5,1.5,1.5,1.5}'

  # Preserve Auto Enable state during calibration per plant
  - id: prev_auto_enable
    type: std::array<bool, 4>
    restore_value: no
    initial_value: '{false,false,false,false}'

  # Plant 1 calibration
  # removed per-plant calibration; replaced with arrays calibration_dry/wet


  # Per-plant lockouts (epoch seconds when next session is allowed)
  # Deprecated per-plant lockouts replaced by array lockout_until[4]

  # Per-plant recent moisture readings and timestamps for ROC
  # removed per-plant moisture history; using arrays last/prev values


  # Generic flags for loops (single concurrency allows reuse)
  - id: stabilizing_loop_active
    type: bool
    restore_value: no
    initial_value: 'false'
  - id: continue_cycles
    type: bool
    restore_value: no
    initial_value: 'false'
  - id: manual_stop_requested
    type: bool
    restore_value: no
    initial_value: 'false'
  - id: stabilize_deadline_ts
    type: uint32_t
    restore_value: no
    initial_value: '0'
  - id: current_roc
    type: float
    restore_value: no
    initial_value: '0.0'

# Water tank level sensor (JSN-SR04T)
sensor:
  # Water tank level sensor
  - platform: ultrasonic
    trigger_pin: GPIO3
    echo_pin: GPIO46
    name: "Water Tank Level"
    id: water_tank_level
    unit_of_measurement: "cm"
    accuracy_decimals: 1
    update_interval: 60s
    timeout: 2m
    filters:
      - filter_out: nan
      - median:
          window_size: 5
          send_every: 3
      - lambda: |
          // Convert distance to percentage (assuming 30cm tank height)
          float tank_height = 30.0;
          float level_percentage = ((tank_height - x) / tank_height) * 100.0;
          if (level_percentage > 100.0) return 100.0;
          if (level_percentage < 0.0) return 0.0;
          return level_percentage;
    icon: "mdi:water-percent"
    on_value:
      then:
        - lambda: |
            // Update low water level problem binary sensor via template lambda already
            // No additional logic here; tank guards will be checked in scripts

  # System uptime
  - platform: uptime
    name: "System Uptime"
    update_interval: 60s
  # Telemetry sensors are defined per plant in the package

interval:
  - interval: 1s
    then:
      - lambda: |
          // Drive idle sampling based on HA-configured idle interval
          if (!id(irrigation_active)) {
            id(idle_tick_seconds) += 1;
            int idle_interval = (int) id(idle_sampling_interval_s_number).state;
            if (idle_interval < 30) idle_interval = 30;
            if (id(idle_tick_seconds) >= idle_interval) {
              id(idle_tick_seconds) = 0;
              // Update all moisture sensors once
              id(plant1_moisture_raw).update();
              id(plant2_moisture_raw).update();
              id(plant3_moisture_raw).update();
              id(plant4_moisture_raw).update();
            }
          }

# Switches defined in packages; keep only derived/busy ones if desired
switch:
  - platform: template
    name: "Irrigation Busy"
    id: irrigation_busy_switch
    lambda: 'return id(irrigation_active);'
    icon: mdi:play-circle
    disabled_by_default: true
    optimistic: true

button:
  - platform: restart
    name: "Restart System"
  - platform: template
    name: "Update Sensors Now"
    id: update_all_sensors_button
    on_press:
      then:
        - component.update: water_tank_level
        - component.update: plant1_moisture_raw
        - component.update: plant2_moisture_raw
        - component.update: plant3_moisture_raw
        - component.update: plant4_moisture_raw

binary_sensor:
  - platform: template
    name: "Low Water Level"
    id: low_water_level
    device_class: problem
    lambda: 'return id(water_tank_level).state < 10.0;'
  - platform: template
    name: "Irrigation Busy"
    id: irrigation_busy
    device_class: running
    lambda: 'return id(irrigation_active);'

number:
  # Global idle sampling interval (seconds)
  - platform: template
    name: "Idle Sampling Interval (s)"
    id: idle_sampling_interval_s_number
    entity_category: config
    optimistic: true
    min_value: 30
    max_value: 3600
    step: 5
    initial_value: 300
    restore_value: true
    unit_of_measurement: "s"
    mode: box

  # Global irrigation timing shared by all plants
  - platform: template
    name: "Irrigation Sample (s)"
    id: irrigation_sampling_interval_s
    entity_category: config
    optimistic: true
    min_value: 1
    max_value: 10
    step: 1
    initial_value: 2
    restore_value: true
    unit_of_measurement: "s"
    mode: box
  - platform: template
    name: "Max Cycles"
    id: max_cycles
    entity_category: config
    optimistic: true
    min_value: 1
    max_value: 20
    step: 1
    initial_value: 8
    restore_value: true
    mode: box
  - platform: template
    name: "Max Session (s)"
    id: max_session_s
    entity_category: config
    optimistic: true
    min_value: 30
    max_value: 3600
    step: 10
    initial_value: 600
    restore_value: true
    unit_of_measurement: "s"
    mode: box
  - platform: template
    name: "Post Session Lockout (min)"
    id: post_session_lockout_min
    entity_category: config
    optimistic: true
    min_value: 0
    max_value: 720
    step: 5
    initial_value: 60
    restore_value: true
    unit_of_measurement: "min"
    mode: box


## Removed sprinkler component in favor of custom per-plant automation per spec

text_sensor:
  - platform: version
    name: "ESPHome Version" 

# per-plant scripts moved to package